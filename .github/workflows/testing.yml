name: Testing

on:
  push:
    branches: [homolog]
  pull_request:
    branches: [homolog]

permissions:
  contents: read

env:
  CI: true
  LEFTHOOK: 0
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

jobs:
  node_build:
    name: Node.js Build

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref || github.ref }}

      - name: Upload Code Coverage Results
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Installing Dependencies
        run: npm install

      - name: Checking Dependencies Security
        run: npm run security-check

      - name: Checking Type
        run: npm run typecheck

      - name: Building
        run: npm run build

      - name: Packing
        run: npm run build:webpack

      - name: Testing Modules
        run: npm run test:unit
      - name: Testing Integration
        run: npm run test:integration
      # - name: Testing API
      #   run: npm run test:e2e

  sonarqube:
    name: SonarQube Analyze

    runs-on: ubuntu-latest

    needs: node_build

    steps:
      - name: Download Code Coverage Results
        uses: actions/download-artifact@v4
        with:
          name: coverage
          path: coverage

      - name: Installing Dependencies
        run: npm install

      - name: Preparing Coverage Files
        run: npm run sonar:prepare

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master

      - name: SonarQube Quality Gate Check
        id: sonarqube_quality_gate_check
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5

      - name: "SonarQube Quality Gate Status Return"
        run: echo "Quality Gate Status -> ${{ steps.sonarqube_quality_gate_check.outputs.quality-gate-status }}"
