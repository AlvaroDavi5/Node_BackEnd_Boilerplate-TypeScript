name: Releasing

on:
  push:
    branches: [main, release]
  pull_request:
    branches: [main, release]

env:
  CI: true
  LEFTHOOK: 0
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build_and_test:
    name: Application Build and Tests

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref || github.ref }}

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Installing Dependencies
        run: npm install --ignore-scripts

      - name: Checking Dependencies Security
        run: npm run security-check

      - name: Checking Type
        run: npm run typecheck

      - name: Building WebPack
        run: npm run build:webpack

      - name: Uploading Release Builded Files
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: build

      - name: Running Unit Tests
        run: npm run test:unit

      - name: Running Integration Tests
        run: npm run test:integration

  semantic_release:
    name: Semantic Versioning Release

    needs: build_and_test

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    permissions:
      contents: write
      issues: write
      pull-requests: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref || github.ref }}

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Installing Dependencies
        run: npm install --ignore-scripts

      - name: Downloading Release Builded Files
        uses: actions/download-artifact@v4
        with:
          name: build
          path: build

      - name: Zipping Build Files
        run: zip -r build.zip build

      - name: Versioning Release
        run: npm run versioning
