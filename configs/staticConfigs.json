{
	"application": {
		"name": "$APP_NAME",
		"environment": "$NODE_ENV",
		"port": "$APP_PORT",
		"url": "$APP_URL",
		"socketEnv": "$SOCKET_ENV",
		"stackErrorVisible": "$SHOW_ERROR_STACK",
		"logsPath": "$APP_LOGS_PATH",
		"logging": "$SHOW_LOGS"
	},
	"database": {
		"database": "$DB_NAME",
		"username": "$DB_USERNAME",
		"password": "$DB_PASSWORD",
		"host": "$DB_HOST",
		"charset": "utf8",
		"dialect": "$DB_DBMS_NAME",
		"port": "$DB_PORT",
		"define": {
			"underscored": false,
			"timestamps": true,
			"paranoid": true,
			"freezeTableName": false
		},
		"pool": {
			"min": 0,
			"max": 5,
			"acquire": 20000,
			"idle": 20000
		}
	},
	"cache": {
		"redis": {
			"host": "$REDIS_HOST",
			"port": "$REDIS_PORT"
		},
		"expirationTime": {
			"connections": 86400
		}
	},
	"integration": {
		"aws": {
			"credentials": {
				"region": "$AWS_REGION",
				"accessKeyId": "$AWS_ACCESS_KEY_ID",
				"secretAccessKey": "$AWS_SECRET_ACCESS_KEY",
				"sessionToken": "$AWS_SESSION_TOKEN",
				"apiVersion": "$AWS_API_VERSION"
			},
			"congito": {
				"userPoolName": "$AWS_COGNITO_USER_POOL_NAME",
				"userPoolId": "$AWS_COGNITO_USER_POOL_ID",
				"clientName": "$AWS_COGNITO_USER_POOL_CLIENT_NAME",
				"clientId": "$AWS_COGNITO_USER_POOL_CLIENT_ID",
				"endpoint": "$AWS_ENDPOINT_URL",
				"apiVersion": "$AWS_API_VERSION"
			},
			"sqs": {
				"defaultQueue": {
					"queueName": "$AWS_SQS_DEFAULT_QUEUE_NAME",
					"queueUrl": "$AWS_SQS_DEFAULT_QUEUE_URL"
				},
				"endpoint": "$AWS_ENDPOINT_URL",
				"apiVersion": "$AWS_API_VERSION"
			},
			"sns": {
				"defaultTopic": {
					"topicName": "$AWS_SNS_DEFAULT_TOPIC_NAME",
					"topicArn": "$AWS_SNS_DEFAULT_TOPIC_ARN",
					"topicProtocol": "$AWS_TOPIC_PROTOCOL"
				},
				"endpoint": "$AWS_ENDPOINT_URL",
				"apiVersion": "$AWS_API_VERSION"
			},
			"s3": {
				"bucketName": "$AWS_S3_BUCKET_NAME",
				"bucketUrl": "$LOCALSTACK_URL",
				"endpoint": "$AWS_ENDPOINT_URL",
				"apiVersion": "$AWS_API_VERSION"
			}
		},
		"rest": {
			"mockedService": {
				"serviceName": "$MOCKED_SERVICE_NAME",
				"baseUrl": "$MOCKED_SERVICE_URL"
			}
		}
	},
	"security": {
		"cryptoAlgorithm": "$CRYPTO_ALGORITHM",
		"secretKey": "$CRYPTO_KEY"
	}
}
